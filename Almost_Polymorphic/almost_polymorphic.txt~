The polymorphic effect shown by iterating through these shape pointers is lost SOMETIMES
if I move the union declarations of the structs to a different position(not position 2,
which is where it should be placed according to the requirements), which results in a seg fault. Because of this, I assume that the position has a large effect on what type of behavior I see.
I believe that because the pointers take up the same amount of memory, the addressing that is going on to call the functions is happening regardless of what type I have declared since the amount of memory taken up is the same. I am very surprised it worked, but I am still confused about why the positioning of the declarations mattered. I'm guessing it has to do with the memory offsets from the pointer to the struct being the same for both structs. (i.e the pointer to the struct is dereferenced, then the offset is applied, pointing to the union function pointer, which is the same offset for both structs).
